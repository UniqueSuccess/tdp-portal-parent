<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.goldencis.tdp.policy.dao.ClientUserDOMapper">
  <resultMap id="BaseResultMap" type="cn.goldencis.tdp.policy.entity.ClientUserDO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="guid" jdbcType="CHAR" property="guid" />
    <result column="truename" jdbcType="VARCHAR" property="truename" />
    <result column="deptguid" jdbcType="INTEGER" property="deptguid" />
    <result column="computerguid" jdbcType="CHAR" property="computerguid" />
    <result column="computername" jdbcType="VARCHAR" property="computername" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="mac" jdbcType="VARCHAR" property="mac" />
    <result column="regtime" jdbcType="TIMESTAMP" property="regtime" />
    <result column="policyid" jdbcType="INTEGER" property="policyid" />
    <result column="online" jdbcType="CHAR" property="online" />
    <result column="online_time" jdbcType="TIMESTAMP" property="onlineTime" />
    <result column="offline_time" jdbcType="TIMESTAMP" property="offlineTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, guid, truename, deptguid, computerguid, computername, ip,
    mac, regtime, policyid, online, online_time, offline_time, remark
  </sql>
  <select id="selectByExample" parameterType="cn.goldencis.tdp.policy.entity.ClientUserDOCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_client_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_client_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_client_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.goldencis.tdp.policy.entity.ClientUserDOCriteria">
    delete from t_client_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.goldencis.tdp.policy.entity.ClientUserDO">
    insert into t_client_user (id, guid, truename, deptguid,
      computerguid, computername, ip,
      mac, regtime, policyid,
      isbinded_usbkey, online, online_time,
      offline_time, remark)
    values (#{id,jdbcType=INTEGER}, #{guid,jdbcType=CHAR}, #{truename,jdbcType=VARCHAR}, #{deptguid,jdbcType=INTEGER},
      #{computerguid,jdbcType=CHAR}, #{computername,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR},
      #{mac,jdbcType=VARCHAR}, #{regtime,jdbcType=TIMESTAMP}, #{policyid,jdbcType=INTEGER},
       #{online,jdbcType=CHAR}, #{onlineTime,jdbcType=TIMESTAMP},
      #{offlineTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.goldencis.tdp.policy.entity.ClientUserDO">
    insert into t_client_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="guid != null">
        guid,
      </if>
      <if test="truename != null">
        truename,
      </if>
      <if test="deptguid != null">
        deptguid,
      </if>
      <if test="computerguid != null">
        computerguid,
      </if>
      <if test="computername != null">
        computername,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="mac != null">
        mac,
      </if>
      <if test="regtime != null">
        regtime,
      </if>
      <if test="policyid != null">
        policyid,
      </if>

      <if test="online != null">
        online,
      </if>
      <if test="onlineTime != null">
        online_time,
      </if>
      <if test="offlineTime != null">
        offline_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="guid != null">
        #{guid,jdbcType=CHAR},
      </if>

      <if test="truename != null">
        #{truename,jdbcType=VARCHAR},
      </if>
      <if test="deptguid != null">
        #{deptguid,jdbcType=INTEGER},
      </if>
      <if test="computerguid != null">
        #{computerguid,jdbcType=CHAR},
      </if>
      <if test="computername != null">
        #{computername,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="mac != null">
        #{mac,jdbcType=VARCHAR},
      </if>
      <if test="regtime != null">
        #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="policyid != null">
        #{policyid,jdbcType=INTEGER},
      </if>

      <if test="online != null">
        #{online,jdbcType=CHAR},
      </if>
      <if test="onlineTime != null">
        #{onlineTime,jdbcType=TIMESTAMP},
      </if>
      <if test="offlineTime != null">
        #{offlineTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.goldencis.tdp.policy.entity.ClientUserDOCriteria" resultType="java.lang.Long">
    select count(*) from t_client_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_client_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.guid != null">
        guid = #{record.guid,jdbcType=CHAR},
      </if>

      <if test="record.truename != null">
        truename = #{record.truename,jdbcType=VARCHAR},
      </if>
      <if test="record.deptguid != null">
        deptguid = #{record.deptguid,jdbcType=INTEGER},
      </if>
      <if test="record.computerguid != null">
        computerguid = #{record.computerguid,jdbcType=CHAR},
      </if>
      <if test="record.computername != null">
        computername = #{record.computername,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.mac != null">
        mac = #{record.mac,jdbcType=VARCHAR},
      </if>
      <if test="record.regtime != null">
        regtime = #{record.regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.policyid != null">
        policyid = #{record.policyid,jdbcType=INTEGER},
      </if>

      <if test="record.online != null">
        online = #{record.online,jdbcType=CHAR},
      </if>
      <if test="record.onlineTime != null">
        online_time = #{record.onlineTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.offlineTime != null">
        offline_time = #{record.offlineTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_client_user
    set id = #{record.id,jdbcType=INTEGER},
      guid = #{record.guid,jdbcType=CHAR},
      
      truename = #{record.truename,jdbcType=VARCHAR},
      deptguid = #{record.deptguid,jdbcType=INTEGER},
      computerguid = #{record.computerguid,jdbcType=CHAR},
      computername = #{record.computername,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      mac = #{record.mac,jdbcType=VARCHAR},
      regtime = #{record.regtime,jdbcType=TIMESTAMP},
      policyid = #{record.policyid,jdbcType=INTEGER},
      
      online = #{record.online,jdbcType=CHAR},
      online_time = #{record.onlineTime,jdbcType=TIMESTAMP},
      offline_time = #{record.offlineTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.goldencis.tdp.policy.entity.ClientUserDO">
    update t_client_user
    <set>
      <if test="guid != null">
        guid = #{guid,jdbcType=CHAR},
      </if>

      <if test="truename != null">
        truename = #{truename,jdbcType=VARCHAR},
      </if>
      <if test="deptguid != null">
        deptguid = #{deptguid,jdbcType=INTEGER},
      </if>
      <if test="computerguid != null">
        computerguid = #{computerguid,jdbcType=CHAR},
      </if>
      <if test="computername != null">
        computername = #{computername,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="mac != null">
        mac = #{mac,jdbcType=VARCHAR},
      </if>
      <if test="regtime != null">
        regtime = #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="policyid != null">
        policyid = #{policyid,jdbcType=INTEGER},
      </if>

      <if test="online != null">
        online = #{online,jdbcType=CHAR},
      </if>
      <if test="onlineTime != null">
        online_time = #{onlineTime,jdbcType=TIMESTAMP},
      </if>
      <if test="offlineTime != null">
        offline_time = #{offlineTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.goldencis.tdp.policy.entity.ClientUserDO">
    update t_client_user
    set guid = #{guid,jdbcType=CHAR},
      truename = #{truename,jdbcType=VARCHAR},
      deptguid = #{deptguid,jdbcType=INTEGER},
      computerguid = #{computerguid,jdbcType=CHAR},
      computername = #{computername,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      mac = #{mac,jdbcType=VARCHAR},
      regtime = #{regtime,jdbcType=TIMESTAMP},
      policyid = #{policyid,jdbcType=INTEGER},
      online = #{online,jdbcType=CHAR},
      online_time = #{onlineTime,jdbcType=TIMESTAMP},
      offline_time = #{offlineTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.goldencis.tdp.policy.entity.ClientUserDOCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_client_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <insert id="insertBatch" parameterType="cn.goldencis.tdp.core.entity.PermissionNavigationDO">
    insert into t_permission_navigation (permission_id, navigation_id)
    values
    <foreach collection="list" item="item" index="index"
             separator=",">
      (#{item.permissionId},#{item.navigationId})
    </foreach>
  </insert>

  <insert id="batchInsertClientUsersByList" parameterType="cn.goldencis.tdp.policy.entity.ClientUserDO">
    insert into t_client_user
      (guid, truename, deptguid, regtime, policyid, online)
    values
    <foreach collection="clientUserList" item="clientUser" index="index" separator=",">
      (#{clientUser.guid}, #{clientUser.truename}, #{clientUser.deptguid},
      #{clientUser.regtime}, #{clientUser.policyid}, #{clientUser.online})
    </foreach>
  </insert>
  
  <resultMap id="ResultMap" type="cn.goldencis.tdp.policy.entity.ClientUserDO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="deptguid" jdbcType="INTEGER" property="deptguid" />
    <result column="computerguid" jdbcType="CHAR" property="computerguid" />
    <result column="computername" jdbcType="VARCHAR" property="computername" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="mac" jdbcType="VARCHAR" property="mac" />
    <result column="policyid" jdbcType="INTEGER" property="policyid" />
    <result column="online" jdbcType="CHAR" property="online" />
    <result column="online_time" jdbcType="TIMESTAMP" property="onlineTime" />
    
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="policy_name" jdbcType="VARCHAR" property="policyName" />
  </resultMap>

  <sql id="Column_List">
    t1.id, t1.deptguid, t1.computerguid, t1.computername, t1.ip,
    t1.mac, t1.policyid, t1.online, t1.online_time, td.name as department_name, tp.name as policy_name
  </sql>
  <sql id="clientUserPage">
    select
    <include refid="Column_List" />
    from t_client_user t1 left join t_department td on t1.deptguid = td.id
          left join t_policy tp on t1.policyid = tp.id
    <where>
      <if test='searchStr != null and searchStr != ""'>
        and (instr(t1.computername, #{searchStr}) &gt; 0 or instr(t1.ip, #{searchStr}) &gt; 0 )
      </if>
      <if test='state != null and state.size > 0'>
        and t1.online in
        <foreach close=")" collection="state" item="item" open="(" separator=",">
          #{item}
        </foreach>
      </if>
      <if test="department != null and department.size > 0">
        and t1.deptguid in
        <foreach close=")" collection="department" item="item" open="(" separator=",">
          #{item}
        </foreach>
      </if>
      <if test="strategy != null and strategy.size > 0">
        and t1.policyid in
        <foreach close=")" collection="strategy" item="item" open="(" separator=",">
          #{item}
        </foreach>
      </if>
    </where>
  </sql>
  <select id="getClientUserListByDepartmentId" resultMap="ResultMap">
    <include refid="clientUserPage" />
    <if test='orderColumn != null and orderColumn == "loginTime" '>
      order by t1.online_time ${orderType}
    </if>
    <if test='start != null and length != null'>
      limit ${start} , ${length}
    </if>
  </select>
  <select id="conutClientUserListByDepartmentId" resultType="int">
    select count(1) cnt from (
    <include refid="clientUserPage" />
    ) t
  </select>
  
  <update id="updateClientUser">
    update t_client_user t
    <set>
      <if test="department != null">
        t.deptguid = #{department},
      </if>
      <if test="strategy != null">
        t.policyid = #{strategy},
      </if>
    </set>
    where t.computerguid in
      <foreach close=")" collection="ids" item="item" open="(" separator=",">
        #{item}
      </foreach>
  </update>
</mapper>
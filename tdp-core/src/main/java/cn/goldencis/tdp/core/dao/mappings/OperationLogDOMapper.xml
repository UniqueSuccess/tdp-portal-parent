<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.goldencis.tdp.core.dao.OperationLogDOMapper">
  <resultMap id="BaseResultMap" type="cn.goldencis.tdp.core.entity.OperationLogDO">
    <id column="log_id" jdbcType="INTEGER" property="logId" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="log_type" jdbcType="INTEGER" property="logType" />
    <result column="log_page" jdbcType="VARCHAR" property="logPage" />
    <result column="log_desc" jdbcType="VARCHAR" property="logDesc" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.goldencis.tdp.core.entity.OperationLogDO">
    <result column="log_operate_param" jdbcType="LONGVARCHAR" property="logOperateParam" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    log_id, time, ip, user_name, log_type, log_page, log_desc
  </sql>
  <sql id="Blob_Column_List">
    log_operate_param
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.goldencis.tdp.core.entity.OperationLogDOCriteria" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.goldencis.tdp.core.entity.OperationLogDOCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_operation_log
    where log_id = #{logId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_operation_log
    where log_id = #{logId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.goldencis.tdp.core.entity.OperationLogDOCriteria">
    delete from t_operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.goldencis.tdp.core.entity.OperationLogDO">
    insert into t_operation_log (log_id, time, ip,
      user_name, log_type, log_page,
      log_desc, log_operate_param)
    values (#{logId,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{ip,jdbcType=VARCHAR},
      #{userName,jdbcType=VARCHAR}, #{logType,jdbcType=INTEGER}, #{logPage,jdbcType=VARCHAR},
      #{logDesc,jdbcType=VARCHAR}, #{logOperateParam,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.goldencis.tdp.core.entity.OperationLogDO">
    insert into t_operation_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        log_id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="logType != null">
        log_type,
      </if>
      <if test="logPage != null">
        log_page,
      </if>
      <if test="logDesc != null">
        log_desc,
      </if>
      <if test="logOperateParam != null">
        log_operate_param,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="logType != null">
        #{logType,jdbcType=INTEGER},
      </if>
      <if test="logPage != null">
        #{logPage,jdbcType=VARCHAR},
      </if>
      <if test="logDesc != null">
        #{logDesc,jdbcType=VARCHAR},
      </if>
      <if test="logOperateParam != null">
        #{logOperateParam,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.goldencis.tdp.core.entity.OperationLogDOCriteria" resultType="java.lang.Long">
    select count(*) from t_operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_operation_log
    <set>
      <if test="record.logId != null">
        log_id = #{record.logId,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.logType != null">
        log_type = #{record.logType,jdbcType=INTEGER},
      </if>
      <if test="record.logPage != null">
        log_page = #{record.logPage,jdbcType=VARCHAR},
      </if>
      <if test="record.logDesc != null">
        log_desc = #{record.logDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.logOperateParam != null">
        log_operate_param = #{record.logOperateParam,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_operation_log
    set log_id = #{record.logId,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP},
      ip = #{record.ip,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      log_type = #{record.logType,jdbcType=INTEGER},
      log_page = #{record.logPage,jdbcType=VARCHAR},
      log_desc = #{record.logDesc,jdbcType=VARCHAR},
      log_operate_param = #{record.logOperateParam,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_operation_log
    set log_id = #{record.logId,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP},
      ip = #{record.ip,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      log_type = #{record.logType,jdbcType=INTEGER},
      log_page = #{record.logPage,jdbcType=VARCHAR},
      log_desc = #{record.logDesc,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.goldencis.tdp.core.entity.OperationLogDO">
    update t_operation_log
    <set>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="logType != null">
        log_type = #{logType,jdbcType=INTEGER},
      </if>
      <if test="logPage != null">
        log_page = #{logPage,jdbcType=VARCHAR},
      </if>
      <if test="logDesc != null">
        log_desc = #{logDesc,jdbcType=VARCHAR},
      </if>
      <if test="logOperateParam != null">
        log_operate_param = #{logOperateParam,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.goldencis.tdp.core.entity.OperationLogDO">
    update t_operation_log
    set time = #{time,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      log_type = #{logType,jdbcType=INTEGER},
      log_page = #{logPage,jdbcType=VARCHAR},
      log_desc = #{logDesc,jdbcType=VARCHAR},
      log_operate_param = #{logOperateParam,jdbcType=LONGVARCHAR}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.goldencis.tdp.core.entity.OperationLogDO">
    update t_operation_log
    set time = #{time,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      log_type = #{logType,jdbcType=INTEGER},
      log_page = #{logPage,jdbcType=VARCHAR},
      log_desc = #{logDesc,jdbcType=VARCHAR}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="cn.goldencis.tdp.core.entity.OperationLogDOCriteria" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="cn.goldencis.tdp.core.entity.OperationLogDOCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>
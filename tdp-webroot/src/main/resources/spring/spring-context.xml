<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:cache="http://www.springframework.org/schema/cache" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:websocket="http://www.springframework.org/schema/websocket" xmlns:util="http://www.springframework.org/schema/util"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.2.xsd
    http://www.springframework.org/schema/jdbc
    http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-4.1.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd"
    >



	<!-- 扫描声明 -->
	<context:annotation-config />
	<!-- 扫描除了controller外所有 -->
	<context:component-scan base-package="cn.goldencis.tdp">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<context:property-placeholder location="classpath*:tdp-common.properties" />

    <bean id="cacheManager" class="cn.goldencis.tdp.common.cache.manager.GuavaCacheManager">
        <property name="cacheSize" value="${guava.cacheSize}"></property>
        <property name="timeLength" value="${guava.timeLength}"></property>
    </bean>
    <cache:annotation-driven/>

	<!-- 基于Druid数据库链接池的数据源配置 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="clone">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${user.jdbc.url}" />
		<property name="username" value="${user.jdbc.username}" />
		<property name="password" value="${user.jdbc.password}" />
		<property name="initialSize" value="2" />
		<property name="minIdle" value="2" />
		<property name="maxActive" value="10" />
		<property name="maxWait" value="60000" />
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="${jdbc.pool.validationQuery}" />
		<property name="testWhileIdle" value="false" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<property name="filters" value="config" />
		<property name="connectionProperties" value="config.decrypt=true" />
	</bean>

	<!-- 将数据源映射到sqlSessionFactory中 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:/mybatis/mybatis-config-all.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath*:cn/goldencis/tdp/**/dao/mappings/*Mapper.xml</value>
			</list>
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.goldencis.tdp" />
		<property name="markerInterface" value="cn.goldencis.tdp.common.dao.BaseDao" />
		<property name="annotationClass" value="cn.goldencis.tdp.common.annotation.Mybatis"/>
	</bean>

	<!-- 事务管理器（由Spring管理MyBatis的事务） -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 关联数据源 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />


	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="maxUploadSize" value="10485760" />
		<!--<property name="uploadTempDir" value="downLoad/temp" />-->
	</bean>


	<!-- spring线程池-->
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
	    <!-- 线程池维护线程的最少数量 -->
	    <property name="corePoolSize" value="5" />
	    <!-- 线程池维护线程所允许的空闲时间，默认为60s  -->
	    <property name="keepAliveSeconds" value="200" />
	    <!-- 线程池维护线程的最大数量 -->
	    <property name="maxPoolSize" value="20" />
	    <!-- 缓存队列最大长度 -->
	     <property name="queueCapacity" value="20" />
	    <!-- 对拒绝task的处理策略   线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者-->
	    <property name="rejectedExecutionHandler">
	    	<!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->
	        <!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->
	        <!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
	        <!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
	        <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
	    </property>
	    <property name="waitForTasksToCompleteOnShutdown" value="true" />
	</bean>

    <task:annotation-driven scheduler="myScheduler" />
    <task:scheduler id="myScheduler" pool-size="5"/>

</beans>